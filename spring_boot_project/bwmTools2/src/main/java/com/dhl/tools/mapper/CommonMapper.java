package com.dhl.tools.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.dhl.tools.domain.CargoLocation;
import com.dhl.tools.domain.LoadTree;
import com.dhl.tools.domain.MaterialCargoLocationTypeData;
import com.dhl.tools.domain.RoleInfo;
import com.dhl.tools.domain.WareHouse;

@Mapper
public interface CommonMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table RoleInfo
	 *
	 * @mbg.generated Fri Apr 14 21:00:59 CST 2017
	 */
	@Select("select w.id,w.code from WareHouse w inner join RoleInfo_WareHouse rw on w.id = rw.wareHouseId inner join RoleInfo r on rw.roleId = r.id where r.id = #{roleId}")
	List<WareHouse> selectWareHouseByRoleId(int roleId);

	@Select("select r.id,r.name from RoleInfo r inner join UserInfo_RoleInfo ur on r.id = ur.roleId inner join UserInfo u on ur.userId = u.id where u.id = #{userId}")
	List<RoleInfo> selectRoleInfoByUserId(int userId);

	@Select("select a.id,a.name,a.parentId as pid,case when ra.roleId is null then 'false' else 'true' end as checked from AuthorityInfo a left join RoleInfo_AuthorityInfo ra on a.id = ra.authorityId and ra.roleId = #{roleId} order by a.sort asc")
	List<LoadTree> getRightTree(String roleId);

	/**
	 * 查询所有非扩展的货位类型(如果是非托盘的一个货位必须能方向最大数量的物料，如果是托盘的没有这个限制，但是在显示的时候需要把用几个货位展示出来)
	 *
	 * @param wareHouseId
	 *            仓库
	 * @param materialId
	 *            物料
	 * @return
	 */
	@Select("SELECT * FROM\n" + "dbo.Material_CargoLocationType_Data\n" + "WHERE\n"
			+ "dbo.Material_CargoLocationType_Data.wareHouseId = #{wareHouseId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.materialId = #{materialId} AND\n"
			+ "((dbo.Material_CargoLocationType_Data.storeCount >= dbo.Material_CargoLocationType_Data.materialMaxStore AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypePallet = 0) OR\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypePallet = 1) AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeExtend = 0 " + "ORDER BY\n"
			+ "dbo.Material_CargoLocationType_Data.usageRate DESC,\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeVolume ASC")
	List<MaterialCargoLocationTypeData> selectAllAppropriateLibraryTypes(@Param("wareHouseId") Integer wareHouseId,
			@Param("materialId") Integer materialId);

	/**
	 * 查询所有扩展的货位类型
	 *
	 * @param wareHouseId
	 *            仓库
	 * @param materialId
	 *            物料
	 * @return
	 */
	@Select("SELECT * FROM\n" + "dbo.Material_CargoLocationType_Data\n" + "WHERE\n"
			+ "dbo.Material_CargoLocationType_Data.wareHouseId = #{wareHouseId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.materialId = #{materialId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.storeCount >= dbo.Material_CargoLocationType_Data.materialMaxStore AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeExtend = 1\n" + "ORDER BY\n"
			+ "dbo.Material_CargoLocationType_Data.usageRate DESC,\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeVolume ASC")
	List<MaterialCargoLocationTypeData> selectExtendAllAppropriateLibraryTypes(
			@Param("wareHouseId") Integer wareHouseId, @Param("materialId") Integer materialId);

	/**
	 * 查询推荐货位类型
	 *
	 * @param wareHouseId
	 *            仓库
	 * @param materialId
	 *            物料
	 * @return
	 */
	/*
	@Select("SELECT * FROM\n" + "dbo.Material_CargoLocationType_Data\n" + "WHERE\n"
			+ "dbo.Material_CargoLocationType_Data.wareHouseId = #{wareHouseId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.materialId = #{materialId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeExtend = #{cargoLocationTypeExtend} AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypePallet = #{cargoLocationTypePallet} AND\n"
			+ "dbo.Material_CargoLocationType_Data.storeCount * dbo.Material_CargoLocationType_Data.cargoLocationTypeCanUseCount >= dbo.Material_CargoLocationType_Data.materialMaxStore "
			+ "ORDER BY\n" + "dbo.Material_CargoLocationType_Data.usageRate DESC,\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeVolume ASC")*/
	@Select("SELECT * FROM\n" + "dbo.Material_CargoLocationType_Data\n" + "WHERE\n"
			+ "dbo.Material_CargoLocationType_Data.wareHouseId = #{wareHouseId} AND\n"
			+ "dbo.Material_CargoLocationType_Data.materialId = #{materialId} AND\n"
			+ "((dbo.Material_CargoLocationType_Data.storeCount >= dbo.Material_CargoLocationType_Data.materialMaxStore AND\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypePallet = 0) OR\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypePallet = 1) ORDER BY\n"
			//+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeExtend = 0 " + "ORDER BY\n"
			+ "dbo.Material_CargoLocationType_Data.usageRate DESC,\n"
			+ "dbo.Material_CargoLocationType_Data.cargoLocationTypeVolume ASC")
	List<MaterialCargoLocationTypeData> selectRecommendedLocationType(@Param("wareHouseId") Integer wareHouseId,
			@Param("materialId") Integer materialId/*, @Param("cargoLocationTypePallet") Boolean cargoLocationTypePallet,
			@Param("cargoLocationTypeExtend") Boolean cargoLocationTypeExtend*/);

	/**
	 * 删除货位重置物料所在货位
	 * 
	 * @param cargoLocationId
	 */
	@Update("update Material set cargoLocationId = null,cargoLocationCode = null,cargoLocationScore = null where cargoLocationId = #{cargoLocationId}")
	void updateMaterialLocationByLocationId(int cargoLocationId);
	
	/**
	 * 删除货位重置物料推荐货位
	 * 
	 * @param recommendedLocationId
	 */
	@Update("update Material set recommendedLocationId = null,recommendedLocationCode = null,recommendedLocationScore = null where recommendedLocationId = #{recommendedLocationId}")
	void updateMaterialRecommendLocationByLocationId(int recommendedLocationId);
	
	/**
	 * 删除货位货位重置物料所在货位类型
	 * 
	 * @param cargoLocationTypeId
	 */
	@Update("update Material set cargoLocationTypeId = null where cargoLocationTypeId = #{cargoLocationTypeId}")
	void updateMaterialLocationTypeByLocationTypeId(int cargoLocationTypeId);
	
	/**
	 * 删除货位货位重置物料推荐货位类型临时表所在货位类型
	 * 
	 * @param cargoLocationTypeId
	 */
	@Update("update Material_CargoLocationType_Data set cargoLocationTypeId = null,cargoLocationTypeCode = null where cargoLocationTypeId = #{cargoLocationTypeId}")
	void updateMaterialLocationTypeDataByLocationTypeId(int cargoLocationTypeId);

	/**
	 * 统计货位类型使用的数量
	 * 
	 * @param wareHouseId
	 * @return
	 */
	@Select("select c.typeId,count(c.id) AS count from CargoLocation c inner join Material m on c.id = m.cargoLocationId where m.wareHouseId = #{wareHouseId} group by c.typeId")
	List<Map<String, Integer>> selectLocationTypeUseCount(@Param("wareHouseId") Integer wareHouseId);

	List<Map<String, Object>> findCargoLocationList(CargoLocation cargoLocation);

	/**
	 * 批量插入
	 * 
	 * @param typeDataList
	 * @return
	 */
	void batchInsertTypeData(@Param("typeDataList") List<MaterialCargoLocationTypeData> typeDataList);

	/**
	 * 统计货位类型总数量
	 * 
	 * @param wareHouseId
	 * @return
	 */
	@Select("select t.id,count(c.id) AS count from CargoLocation c inner join CargoLocationType t on c.typeId = t.id where c.wareHouseId = #{wareHouseId} group by t.id")
	List<Map<String, Integer>> selectLocationTypeTotalCount(@Param("wareHouseId") Integer wareHouseId);

	/**
	 * 删除货位重置物料所在货位
	 * 
	 * @param batchNum
	 */
	@Update("update Material set cargoLocationId = null,cargoLocationCode = null,cargoLocationScore = null where cargoLocationId in (select id from CargoLocation where wareHouseId = #{wareHouseId} and batchNum != #{batchNum})")
	void updateMaterialLocationByLocationBatchNum(@Param("wareHouseId") Integer wareHouseId,@Param("batchNum") String batchNum);
	
	
	/**
	 * 删除货位重置物料推荐货位
	 * 
	 * @param batchNum
	 */
	@Update("update Material set recommendedLocationId = null,recommendedLocationCode = null,recommendedLocationScore = null where recommendedLocationId in (select id from CargoLocation where wareHouseId = #{wareHouseId} and batchNum != #{batchNum})")
	void updateMaterialRecommendLocationByLocationBatchNum(@Param("wareHouseId") Integer wareHouseId,@Param("batchNum") String batchNum);
	
	/**
	 * 查询货位类型使用数量
	 * 
	 * @param cargoLocationTypeId
	 * @return
	 */
	@Select("select count(c.id) AS count from CargoLocation c inner join Material m on c.id = m.cargoLocationId where c.typeId = #{cargoLocationTypeId}")
	Integer selectLocationTypeUseCountById(@Param("cargoLocationTypeId") Integer cargoLocationTypeId);
	
	/**
	 * 查询当前仓库下面未设置配置的数量
	 * 
	 * @param wareHouseId
	 * @return
	 */
	@Select("select count(c.id) AS count from CargoLocation_Data c where (c.primaryPriority is null or c.standbyPriority is null) and c.wareHouseId = #{wareHouseId}")
	Integer selectNotSetCount(@Param("wareHouseId") Integer wareHouseId);
}